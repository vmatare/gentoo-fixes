From bfbe06cfc9a5614e879fd3261dc94b4b59bee3e3 Mon Sep 17 00:00:00 2001
From: David Kedves <david.kedves@borgcollective.eu>
Date: Fri, 13 Apr 2018 10:57:33 +0200
Subject: [PATCH] Compilation fixes for OpenSSL 1.1

---
 src/mongo/crypto/crypto_openssl.cpp | 20 ++++++++++++++------
 src/mongo/util/net/ssl_manager.cpp  |  7 ++++++-
 2 files changed, 20 insertions(+), 7 deletions(-)

diff --git a/src/mongo/crypto/crypto_openssl.cpp b/src/mongo/crypto/crypto_openssl.cpp
index 50307b7..b4a87aa 100644
--- a/src/mongo/crypto/crypto_openssl.cpp
+++ b/src/mongo/crypto/crypto_openssl.cpp
@@ -34,19 +34,27 @@ namespace crypto {
  * Computes a SHA-1 hash of 'input'.
  */
 bool sha1(const unsigned char* input, const size_t inputLen, unsigned char* output) {
-    EVP_MD_CTX digestCtx;
-    EVP_MD_CTX_init(&digestCtx);
-    ON_BLOCK_EXIT(EVP_MD_CTX_cleanup, &digestCtx);
+    EVP_MD_CTX *digestCtx = EVP_MD_CTX_create();
+    if (!digestCtx) {
+        return false;
+    }
+
+    EVP_MD_CTX_init(digestCtx);
+    #if OPENSSL_VERSION_NUMBER < 0x10100000L
+    ON_BLOCK_EXIT(EVP_MD_CTX_destroy, digestCtx);
+    #else
+    ON_BLOCK_EXIT(EVP_MD_CTX_free, digestCtx);
+    #endif
 
-    if (1 != EVP_DigestInit_ex(&digestCtx, EVP_sha1(), NULL)) {
+    if (1 != EVP_DigestInit_ex(digestCtx, EVP_sha1(), NULL)) {
         return false;
     }
 
-    if (1 != EVP_DigestUpdate(&digestCtx, input, inputLen)) {
+    if (1 != EVP_DigestUpdate(digestCtx, input, inputLen)) {
         return false;
     }
 
-    return (1 == EVP_DigestFinal_ex(&digestCtx, output, NULL));
+    return (1 == EVP_DigestFinal_ex(digestCtx, output, NULL));
 }
 
 /*
diff --git a/src/mongo/util/net/ssl_manager.cpp b/src/mongo/util/net/ssl_manager.cpp
index 03a1d21..6594209 100644
--- a/src/mongo/util/net/ssl_manager.cpp
+++ b/src/mongo/util/net/ssl_manager.cpp
@@ -628,7 +628,12 @@ bool SSLManager::_initSSLContext(SSL_CTX** context, const Params& params) {
 
 bool SSLManager::_setSubjectName(const std::string& keyFile, std::string& subjectName) {
     // Read the certificate subject name and store it
-    BIO* in = BIO_new(BIO_s_file_internal());
+    BIO* in;
+    #if OPENSSL_VERSION_NUMBER < 0x10100000L
+    in = BIO_new(BIO_s_file_internal());
+    #else
+    in = BIO_new(BIO_s_file());
+    #endif
     if (NULL == in) {
         error() << "failed to allocate BIO object: " << getSSLErrorMessage(ERR_get_error()) << endl;
         return false;
-- 
2.20.1

